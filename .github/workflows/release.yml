name: Release

on:
  push:
    tags:
      - 'v*' 


jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Check
        uses: actions/checkout@v2
      - name: Setup Nodejs and npm
        uses: actions/setup-node@v2
        with:
          node-version: "16.16.0"
      - name: Setup yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn
      - name: Check lint 
        id: lint
        run: yarn lint
      - name: Check tsc
        id: tsc
        run: yarn ts
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Get release
        id: release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
           myToken: ${{ github.token }}
      - name: Get commits
        id: commits
        uses: satackey/action-js-inline@v0.0.2
        with:
          required-packages: axios
          script: |
             const core = require('@actions/core');
             const axios = require('axios');
             const getCommits = async () => {
             let responce = await axios.get("https://api.github.com/repos/nyamzmeya/infra-template/compare/${{steps.release.outputs.tag_name}}...${{ github.ref_name }}",
             { headers: { "Authorization": "token ${{ secrets.GIT_API }}" } });
             let result = "";
             responce.data.commits
             .forEach(commit => {
             result += `${commit.sha} ${commit.commit.author.name} ${commit.commit.message} \n`
             })
             return result;
             }
             getCommits().then(result => core.setOutput('result', result))
      - name: List commits
        run: echo ${{ steps.commits.outputs.result}}
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/simplewhale:latest
      - name: Tracker name and description
        id: tracker
        run: >-
            curl -X PATCH https://api.tracker.yandex.net/v2/issues/INFRA-58
            -H 'Accept: application/json'
            -H 'Authorization: OAuth ${{secrets.TOKEN }}' 
            -H 'X-Org-ID: ${{ secrets.ORGANISATION_ID }}'
            -d '{"summary": "Релиз № ${{ github.ref_name }} от ${{ steps.date.outputs.date }}", "description" : "Ответственный за релиз ${{ github.actor }} \n Коммиты, попавшие в релиз: "}'
      - name: Tracker comment
        run: >-
            curl -X POST https://api.tracker.yandex.net/v2/issues/INFRA-58/comments
            -H 'Accept: application/json'
            -H 'Authorization: OAuth ${{secrets.TOKEN }}' 
            -H 'X-Org-ID: ${{ secrets.ORGANISATION_ID }}'
            -d '{"text": "Собрали образ в тегом ${{ github.ref_name }}" }'
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
